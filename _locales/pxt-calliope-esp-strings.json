{
  "esp8266.attach|block": "connect to the wifi network|SSID %ssid|password %password",
  "esp8266.detach|block": "disconnect from wifi network",
  "esp8266.init|block": "initialize ESP8266|TX %tx|RX %rx|at baud rate %rate",
  "esp8266.isAttached|block": "network attached?",
  "esp8266.sendEncoded|block": "send raw message|message %message",
  "esp8266.sendNumber|block": "send number message|key %key|value %n",
  "esp8266.sendOk|block": "send success?",
  "esp8266.sendString|block": "send string message|key %key|value %n",
  "esp8266.sendTCP|block": "send TCP message|server %address|port %port|message %message",
  "esp8266.sendUDP|block": "send UDP message|server %address|port %port|message %message",
  "esp8266.send|block": "send raw message|type %type|server %address|port %port|message %message",
  "esp8266.setEncryption|block": "encrypt messages %encrypted",
  "esp8266.setServer|block": "set server |address %host|port %port",
  "esp8266|block": "esp8266",
  "modem.enableDebug|block": "enable DEBUG %debug",
  "modem.expectOK|block": "check AT %command|response OK?",
  "modem.init|block": "initialize Modem|TX %tx|RX %rx|at baud rate %rate",
  "modem.pushAT|block": "send AT %command",
  "modem.receiveResponse|block": "wait for response %cond",
  "modem.sendAT|block": "send AT %command and receive",
  "modem|block": "modem",
  "serial.resetSerial|block": "serial reset",
  "serial.setReceiveBufferSize|block": "serial receive buffer size %size",
  "serial|block": "serial",
  "{id:category}Esp8266": "Esp8266",
  "{id:category}Modem": "Modem",
  "{id:category}Serial": "Serial"
}